<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>campus network pppoe dial</title>
    <url>/campus-network-pppoe-7efda74f9f5e/</url>
    <content><![CDATA[<h1 id="拨号方法"><a href="#拨号方法" class="headerlink" title="拨号方法"></a>拨号方法</h1><ol>
<li>确认个人校园网的运营商  </li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th>运营商</th>
<th>英文缩写</th>
</tr>
</thead>
<tbody>
<tr>
<td>电信</td>
<td>telecom</td>
</tr>
<tr>
<td>联通</td>
<td>unicom</td>
</tr>
<tr>
<td>移动</td>
<td>cmcc</td>
</tr>
<tr>
<td>校园网</td>
<td>haust</td>
</tr>
</tbody>
</table>
</div>
<ol>
<li>拨号格式<br>帐号：学号@运营商英文缩写<br>密码：校园网密码  </li>
</ol>
<h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ul>
<li>可以摆脱校园网只能连接一个设备的限制</li>
<li>相比连WiFi更加稳定</li>
</ul>
<h1 id="发现过程"><a href="#发现过程" class="headerlink" title="发现过程"></a>发现过程</h1><ol>
<li>打开校园网连接认证界面,地址：10.10.10.11</li>
<li>打开浏览器开发者工具，定位到<em>选择运营商的窗口</em>, 将看到如下内容，即不同运营商对应的英文缩写<br><img src="/images/Screenshot2024-2-29.png" alt=""></li>
<li>这里的缩写是wtelecom, 因为这是WiFi的连接，w即代表WiFi, 所以在有线拨号的时候需要去掉w</li>
</ol>
]]></content>
      <categories>
        <category>networks</category>
      </categories>
  </entry>
  <entry>
    <title>dae_setup</title>
    <url>/dae-setup-56dad34f12d6/</url>
    <content><![CDATA[<h2 id="dae手动编译安装与配置"><a href="#dae手动编译安装与配置" class="headerlink" title="dae手动编译安装与配置"></a>dae手动编译安装与配置</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="编译依赖要求"><a href="#编译依赖要求" class="headerlink" title="编译依赖要求"></a>编译依赖要求</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clang &gt;= 10</span></span><br><span class="line">llvm &gt;= 10 (optional)</span><br><span class="line">golang &gt;= 1.18</span><br><span class="line">make</span><br><span class="line"><span class="comment"># 安装(如果是及以上ubunut22.04,对应版本都满足)</span></span><br><span class="line">$ sudo apt install clang llvm golang make -y</span><br></pre></td></tr></table></figure>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将dae源码clone到本地</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/daeuniverse/dae.git</span><br><span class="line"><span class="comment"># 进入dae文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> dae</span><br><span class="line"><span class="comment"># 初始化并更新子模块</span></span><br><span class="line">$ git submodule update --init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最小依赖编译,这里的&quot;\&quot;,是换行输入符号，目的是将指令换行书写便于查看</span></span><br><span class="line">$ make GOFLAGS=<span class="string">&quot;-buildvcs=false&quot;</span> \</span><br><span class="line">  CC=clang</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常规编译</span></span><br><span class="line">make</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译后可在当前文件夹得到可二进制文件dae</span></span><br><span class="line"><span class="comment"># 给予可执行权限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> +x ./dae</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文件添加到/usr/bin</span></span><br><span class="line">sudo install -Dm755 dae /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># dae的帮助信息</span></span><br><span class="line">dae [-h,--<span class="built_in">help</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 版本信息查看</span></span><br><span class="line">dae version</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="运行使得依赖安装"><a href="#运行使得依赖安装" class="headerlink" title="运行使得依赖安装"></a>运行使得依赖安装</h3><ul>
<li>安装分流规则依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建dae文件夹</span></span><br><span class="line">$ <span class="built_in">mkdir</span> -p /usr/local/share/dae/</span><br><span class="line"></span><br><span class="line"><span class="comment"># pushd是暂时切换到指定路径，在pushd /your/directory/ 和 popd之间的指令都会</span></span><br><span class="line"><span class="comment"># 使用/your/directory的文件路径</span></span><br><span class="line">$ <span class="built_in">pushd</span> /usr/local/share/dae/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载geoip.dat和geosite.dat文件,若由于网络问题下载报错，可以到相应的github地址下载，并解压到该目录下</span></span><br><span class="line">$ curl -L -o geoip.dat https://github.com/v2fly/geoip/releases/latest/download/geoip.dat</span><br><span class="line">$ curl -L -o geosite.dat https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回到之前的文件路径</span></span><br><span class="line">$ <span class="built_in">popd</span></span><br></pre></td></tr></table></figure>
<ul>
<li>下载dea配置文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建dae配置文件夹,并进入该路径,将配置文件放到这里，dae会默认先加载该配置文件</span></span><br><span class="line">$ sudo <span class="built_in">mkdir</span> -p /etc/dae &amp;&amp; <span class="built_in">cd</span> /etc/dae/</span><br><span class="line">$ curl -L -o config.dae https://github.com/daeuniverse/dae/raw/main/example.dae</span><br></pre></td></tr></table></figure>
<ul>
<li>配置文件内容<br>个人配置只需要配置订阅地址或节点配置信息,其他配置默认就可以正常使用了</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">global <span class="punctuation">&#123;</span></span><br><span class="line">    ##### Software options.</span><br><span class="line"></span><br><span class="line">    # tproxy port to listen on. It is NOT a HTTP/SOCKS port<span class="punctuation">,</span> and is just used by eBPF program.</span><br><span class="line">    # In normal case<span class="punctuation">,</span> you do not need to use it.</span><br><span class="line">    tproxy_port<span class="punctuation">:</span> <span class="number">12345</span></span><br><span class="line"></span><br><span class="line">    # Set it <span class="literal"><span class="keyword">true</span></span> to protect tproxy port from unsolicited traffic. Set it <span class="literal"><span class="keyword">false</span></span> to allow users to use self-managed</span><br><span class="line">    # iptables tproxy rules.</span><br><span class="line">    tproxy_port_protect<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"></span><br><span class="line">    # If not zero<span class="punctuation">,</span> traffic sent from dae will be set SO_MARK. It is useful to avoid traffic loop with iptables tproxy</span><br><span class="line">    # rules.</span><br><span class="line">    so_mark_from_dae<span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    # Log level<span class="punctuation">:</span> error<span class="punctuation">,</span> warn<span class="punctuation">,</span> info<span class="punctuation">,</span> debug<span class="punctuation">,</span> trace.</span><br><span class="line">    log_level<span class="punctuation">:</span> info</span><br><span class="line"></span><br><span class="line">    # Disable waiting for network before pulling subscriptions.</span><br><span class="line">    disable_waiting_network<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ##### Interface and kernel options.</span><br><span class="line"></span><br><span class="line">    # The LAN interface to bind. Use it if you want to proxy LAN.</span><br><span class="line">    # Multiple interfaces split by <span class="string">&quot;,&quot;</span>.</span><br><span class="line">    #lan_interface<span class="punctuation">:</span> docker0</span><br><span class="line"></span><br><span class="line">    # The WAN interface to bind. Use it if you want to proxy localhost.</span><br><span class="line">    # Multiple interfaces split by <span class="string">&quot;,&quot;</span>. Use <span class="string">&quot;auto&quot;</span> to auto detect.</span><br><span class="line">    wan_interface<span class="punctuation">:</span> auto</span><br><span class="line"></span><br><span class="line">    # Automatically configure Linux kernel parameters like ip_forward and send_redirects. Check out</span><br><span class="line">    # https<span class="punctuation">:</span><span class="comment">//github.com/daeuniverse/dae/blob/main/docs/en/user-guide/kernel-parameters.md to see what will dae do.</span></span><br><span class="line">    auto_config_kernel_parameter<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"></span><br><span class="line">    ##### Node connectivity check.</span><br><span class="line"></span><br><span class="line">    # Host of URL should have both IPv4 and IPv6 if you have double stack in local.</span><br><span class="line">    # First is URL<span class="punctuation">,</span> others are IP addresses if given.</span><br><span class="line">    # Considering traffic consumption<span class="punctuation">,</span> it is recommended to choose a site with anycast IP and less response.</span><br><span class="line">    #tcp_check_url<span class="punctuation">:</span> &#x27;http<span class="punctuation">:</span><span class="comment">//cp.cloudflare.com&#x27;</span></span><br><span class="line">    tcp_check_url<span class="punctuation">:</span> &#x27;http<span class="punctuation">:</span><span class="comment">//cp.cloudflare.com,1.1.1.1,2606:4700:4700::1111&#x27;</span></span><br><span class="line"></span><br><span class="line">    # The HTTP request method to `tcp_check_url`. Use &#x27;HEAD&#x27; by default because some server implementations bypass</span><br><span class="line">    # accounting for this kind of traffic.</span><br><span class="line">    tcp_check_http_method<span class="punctuation">:</span> HEAD</span><br><span class="line"></span><br><span class="line">    # This DNS will be used to check UDP connectivity of nodes. And if dns_upstream below contains tcp<span class="punctuation">,</span> it also be used to check</span><br><span class="line">    # TCP DNS connectivity of nodes.</span><br><span class="line">    # First is URL<span class="punctuation">,</span> others are IP addresses if given.</span><br><span class="line">    # This DNS should have both IPv4 and IPv6 if you have double stack in local.</span><br><span class="line">    #udp_check_dns<span class="punctuation">:</span> &#x27;dns.google.com<span class="punctuation">:</span><span class="number">53</span>&#x27;</span><br><span class="line">    udp_check_dns<span class="punctuation">:</span> &#x27;dns.google.com<span class="punctuation">:</span><span class="number">53</span><span class="punctuation">,</span><span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span><span class="punctuation">,</span><span class="number">2001</span><span class="punctuation">:</span><span class="number">4860</span><span class="punctuation">:</span><span class="number">4860</span><span class="punctuation">:</span><span class="punctuation">:</span><span class="number">8888</span>&#x27;</span><br><span class="line"></span><br><span class="line">    check_interval<span class="punctuation">:</span> <span class="number">30</span>s</span><br><span class="line"></span><br><span class="line">    # Group will switch node only when new_latency &lt;= old_latency - tolerance.</span><br><span class="line">    check_tolerance<span class="punctuation">:</span> <span class="number">50</span>ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ##### Connecting options.</span><br><span class="line"></span><br><span class="line">    # Optional values of dial_mode are<span class="punctuation">:</span></span><br><span class="line">    # <span class="number">1.</span> <span class="string">&quot;ip&quot;</span>. Dial proxy using the IP from DNS directly. This allows your ipv4<span class="punctuation">,</span> ipv6 to choose the optimal path</span><br><span class="line">    #       respectively<span class="punctuation">,</span> and makes the IP version requested by the application meet expectations. For example<span class="punctuation">,</span> if you</span><br><span class="line">    #       use curl <span class="number">-4</span> ip.sb<span class="punctuation">,</span> you will request IPv4 via proxy and get a IPv4 echo. And curl <span class="number">-6</span> ip.sb will request IPv6.</span><br><span class="line">    #       This may solve some wierd full-cone problem if your are be your node support that. Sniffing will be disabled</span><br><span class="line">    #       in this mode.</span><br><span class="line">    # <span class="number">2.</span> <span class="string">&quot;domain&quot;</span>. Dial proxy using the domain from sniffing. This will relieve DNS pollution problem to a great extent</span><br><span class="line">    #       if have impure DNS environment. Generally<span class="punctuation">,</span> this mode brings faster proxy response time because proxy will</span><br><span class="line">    #       re-resolve the domain in remote<span class="punctuation">,</span> thus get better IP result to connect. This policy does not impact routing.</span><br><span class="line">    #       That is to say<span class="punctuation">,</span> domain rewrite will be after traffic split of routing and dae will not re-route it.</span><br><span class="line">    # <span class="number">3.</span> <span class="string">&quot;domain+&quot;</span>. Based on domain mode but do not check the reality of sniffed domain. It is useful for users whose</span><br><span class="line">    #       DNS requests do not go through dae but want faster proxy response time. Notice that<span class="punctuation">,</span> if DNS requests do not</span><br><span class="line">    #       go through dae<span class="punctuation">,</span> dae cannot split traffic by domain.</span><br><span class="line">    # <span class="number">4.</span> <span class="string">&quot;domain++&quot;</span>. Based on domain+ mode but force to re-route traffic using sniffed domain to partially recover</span><br><span class="line">    #       domain based traffic split ability. It doesn&#x27;t work for direct traffic and consumes more CPU resources.</span><br><span class="line">    dial_mode<span class="punctuation">:</span> domain</span><br><span class="line"></span><br><span class="line">    # Allow insecure TLS certificates. It is not recommended to turn it on unless you have to.</span><br><span class="line">    allow_insecure<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"></span><br><span class="line">    # Timeout to waiting for first data sending for sniffing. It is always <span class="number">0</span> if dial_mode is ip. Set it higher is useful</span><br><span class="line">    # in high latency LAN network.</span><br><span class="line">    sniffing_timeout<span class="punctuation">:</span> <span class="number">100</span>ms</span><br><span class="line"></span><br><span class="line">    # TLS implementation. tls is to use Go&#x27;s crypto/tls. utls is to use uTLS<span class="punctuation">,</span> which can imitate browser&#x27;s Client Hello.</span><br><span class="line">    tls_implementation<span class="punctuation">:</span> tls</span><br><span class="line"></span><br><span class="line">    # The Client Hello ID for uTLS to imitate. This takes effect only if tls_implementation is utls.</span><br><span class="line">    # See more<span class="punctuation">:</span> https<span class="punctuation">:</span><span class="comment">//github.com/daeuniverse/dae/blob/331fa23c16/component/outbound/transport/tls/utls.go#L17</span></span><br><span class="line">    utls_imitate<span class="punctuation">:</span> chrome_auto</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># Subscriptions defined here will be resolved as nodes and merged as a part of the global node pool.</span><br><span class="line"># Support to give the subscription a tag<span class="punctuation">,</span> and filter nodes from a given subscription in the group section.</span><br><span class="line">subscription <span class="punctuation">&#123;</span></span><br><span class="line">    # Add your subscription links here.</span><br><span class="line">    # 添加个人订阅</span><br><span class="line">    my_sub<span class="punctuation">:</span> &#x27;https<span class="punctuation">:</span><span class="comment">//www.example.com/subscription/link&#x27;</span></span><br><span class="line">    # another_sub<span class="punctuation">:</span> &#x27;https<span class="punctuation">:</span><span class="comment">//example.com/another_sub&#x27;</span></span><br><span class="line">    &#x27;https<span class="punctuation">:</span><span class="comment">//example.com/no_tag_link&#x27;</span></span><br><span class="line">    &#x27;file<span class="punctuation">:</span><span class="comment">//relative/path/to/mysub.sub&#x27; # Put subscription content in /etc/dae/relative/path/to/mysub.sub</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># Nodes defined here will be merged as a part of the global node pool.</span><br><span class="line">node <span class="punctuation">&#123;</span></span><br><span class="line">    # Add your node links here.</span><br><span class="line">    # 添加个人节点信息</span><br><span class="line">    # Support socks5<span class="punctuation">,</span> http<span class="punctuation">,</span> https<span class="punctuation">,</span> ss<span class="punctuation">,</span> ssr<span class="punctuation">,</span> vmess<span class="punctuation">,</span> vless<span class="punctuation">,</span> trojan<span class="punctuation">,</span> tuic<span class="punctuation">,</span> juicity<span class="punctuation">,</span> etc.</span><br><span class="line">    # Full support list<span class="punctuation">:</span> https<span class="punctuation">:</span><span class="comment">//github.com/daeuniverse/dae/blob/main/docs/en/proxy-protocols.md</span></span><br><span class="line">    &#x27;socks5<span class="punctuation">:</span><span class="comment">//localhost:1080&#x27;</span></span><br><span class="line">    mylink<span class="punctuation">:</span> &#x27;ss<span class="punctuation">:</span><span class="comment">//LINK&#x27;</span></span><br><span class="line">    node1<span class="punctuation">:</span> &#x27;vmess<span class="punctuation">:</span><span class="comment">//LINK&#x27;</span></span><br><span class="line">    node2<span class="punctuation">:</span> &#x27;vless<span class="punctuation">:</span><span class="comment">//LINK&#x27;</span></span><br><span class="line">    chains<span class="punctuation">:</span> &#x27;tuic<span class="punctuation">:</span><span class="comment">//LINK -&gt; vmess://LINK&#x27;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># See https<span class="punctuation">:</span><span class="comment">//github.com/daeuniverse/dae/blob/main/docs/en/configuration/dns.md for full examples.</span></span><br><span class="line">dns <span class="punctuation">&#123;</span></span><br><span class="line">    # For example<span class="punctuation">,</span> if ipversion_prefer is <span class="number">4</span> and the domain name has both type A and type AAAA records<span class="punctuation">,</span> the dae will only</span><br><span class="line">    # respond to type A queries and response empty answer to type AAAA queries.</span><br><span class="line">    #ipversion_prefer<span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    # Give a fixed ttl for domains. Zero means that dae will request to upstream every time and not cache DNS results</span><br><span class="line">    # for these domains.</span><br><span class="line">    #fixed_domain_ttl <span class="punctuation">&#123;</span></span><br><span class="line">    #    ddns.example.org<span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">    #    test.example.org<span class="punctuation">:</span> <span class="number">3600</span></span><br><span class="line">    #<span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    upstream <span class="punctuation">&#123;</span></span><br><span class="line">        # Value can be scheme<span class="punctuation">:</span><span class="comment">//host:port, where the scheme can be tcp/udp/tcp+udp.</span></span><br><span class="line">        # If host is a domain and has both IPv4 and IPv6 record<span class="punctuation">,</span> dae will automatically choose</span><br><span class="line">        # IPv4 or IPv6 to use according to group policy (such as min latency policy).</span><br><span class="line">        # Please make sure DNS traffic will go through and be forwarded by dae<span class="punctuation">,</span> which is REQUIRED for domain routing.</span><br><span class="line">        # If dial_mode is <span class="string">&quot;ip&quot;</span><span class="punctuation">,</span> the upstream DNS answer SHOULD NOT be polluted<span class="punctuation">,</span> so domestic public DNS is not recommended.</span><br><span class="line"></span><br><span class="line">        alidns<span class="punctuation">:</span> &#x27;udp<span class="punctuation">:</span><span class="comment">//dns.alidns.com:53&#x27;</span></span><br><span class="line">        googledns<span class="punctuation">:</span> &#x27;tcp+udp<span class="punctuation">:</span><span class="comment">//dns.google.com:53&#x27;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    routing <span class="punctuation">&#123;</span></span><br><span class="line">        # According to the request of dns query<span class="punctuation">,</span> decide to use which DNS upstream.</span><br><span class="line">        # Match rules from top to bottom.</span><br><span class="line">        request <span class="punctuation">&#123;</span></span><br><span class="line">            # Lookup China mainland domains using alidns<span class="punctuation">,</span> otherwise googledns.</span><br><span class="line">            qname(geosite<span class="punctuation">:</span>cn) -&gt; alidns</span><br><span class="line">            # fallback is also called default.</span><br><span class="line">            fallback<span class="punctuation">:</span> googledns</span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">#    routing <span class="punctuation">&#123;</span></span><br><span class="line">#        # According to the request of dns query<span class="punctuation">,</span> decide to use which DNS upstream.</span><br><span class="line">#        # Match rules from top to bottom.</span><br><span class="line">#        request <span class="punctuation">&#123;</span></span><br><span class="line">#            # fallback is also called default.</span><br><span class="line">#            fallback<span class="punctuation">:</span> alidns</span><br><span class="line">#        <span class="punctuation">&#125;</span></span><br><span class="line">#        # According to the response of dns query<span class="punctuation">,</span> decide to accept or re-lookup using another DNS upstream.</span><br><span class="line">#        # Match rules from top to bottom.</span><br><span class="line">#        response <span class="punctuation">&#123;</span></span><br><span class="line">#            # Trusted upstream. Always accept its result.</span><br><span class="line">#            upstream(googledns) -&gt; accept</span><br><span class="line">#            # Possibly polluted<span class="punctuation">,</span> re-lookup using googledns.</span><br><span class="line">#            ip(geoip<span class="punctuation">:</span>private) &amp;&amp; !qname(geosite<span class="punctuation">:</span>cn) -&gt; googledns</span><br><span class="line">#            # fallback is also called default.</span><br><span class="line">#            fallback<span class="punctuation">:</span> accept</span><br><span class="line">#        <span class="punctuation">&#125;</span></span><br><span class="line">#    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># Node group (outbound).</span><br><span class="line">group <span class="punctuation">&#123;</span></span><br><span class="line">    my_group <span class="punctuation">&#123;</span></span><br><span class="line">        # No filter. Use all nodes.</span><br><span class="line"></span><br><span class="line">        # Randomly select a node from the group for every connection.</span><br><span class="line">        #policy<span class="punctuation">:</span> random</span><br><span class="line"></span><br><span class="line">        # Select the first node from the group for every connection.</span><br><span class="line">        #policy<span class="punctuation">:</span> fixed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        # Select the node with min last latency from the group for every connection.</span><br><span class="line">        #policy<span class="punctuation">:</span> min</span><br><span class="line"></span><br><span class="line">        # Select the node with min moving average of latencies from the group for every connection.</span><br><span class="line">        policy<span class="punctuation">:</span> min_moving_avg</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    group2 <span class="punctuation">&#123;</span></span><br><span class="line">        # Filter nodes from the global node pool defined by the subscription and node section above.</span><br><span class="line">        #filter<span class="punctuation">:</span> subtag(my_sub) &amp;&amp; !name(keyword<span class="punctuation">:</span> &#x27;ExpireAt<span class="punctuation">:</span>&#x27;)</span><br><span class="line">        # Multiple filters indicate &#x27;or&#x27; logic.</span><br><span class="line">        #filter<span class="punctuation">:</span> subtag(regex<span class="punctuation">:</span> &#x27;^my_&#x27;<span class="punctuation">,</span> another_sub) &amp;&amp; !name(keyword<span class="punctuation">:</span> &#x27;ExpireAt<span class="punctuation">:</span>&#x27;)</span><br><span class="line"></span><br><span class="line">        # Filter nodes from the global node pool defined by tag.</span><br><span class="line">        #filter<span class="punctuation">:</span> name(node1<span class="punctuation">,</span> node2)</span><br><span class="line"></span><br><span class="line">        # Filter nodes and give a fixed latency offset to archive latency-based failover.</span><br><span class="line">        # In this example<span class="punctuation">,</span> there is bigger possibility to choose US node even if original latency of US node is higher.</span><br><span class="line">        filter<span class="punctuation">:</span> name(HK_node)</span><br><span class="line">        filter<span class="punctuation">:</span> name(US_node) <span class="punctuation">[</span>add_latency<span class="punctuation">:</span> <span class="number">-500</span>ms<span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line">        # Select the node with min average of the last <span class="number">10</span> latencies from the group for every connection.</span><br><span class="line">        policy<span class="punctuation">:</span> min_avg10</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"># See https<span class="punctuation">:</span><span class="comment">//github.com/daeuniverse/dae/blob/main/docs/en/configuration/routing.md for full examples.</span></span><br><span class="line">routing <span class="punctuation">&#123;</span></span><br><span class="line">    ### Preset rules.</span><br><span class="line"></span><br><span class="line">    # Network managers in localhost should be direct to avoid <span class="literal"><span class="keyword">false</span></span> negative network connectivity check when binding to</span><br><span class="line">    # WAN.</span><br><span class="line">    pname(NetworkManager) -&gt; direct</span><br><span class="line"></span><br><span class="line">    # Put it in the front to prevent broadcast<span class="punctuation">,</span> multicast and other packets that should be sent to the LAN from being</span><br><span class="line">    # forwarded by the proxy.</span><br><span class="line">    # <span class="string">&quot;dip&quot;</span> means destination IP.</span><br><span class="line">    dip(<span class="number">224.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">3</span><span class="punctuation">,</span> &#x27;ff00<span class="punctuation">:</span><span class="punctuation">:</span>/<span class="number">8</span>&#x27;) -&gt; direct</span><br><span class="line"></span><br><span class="line">    # This line allows you to access private addresses directly instead of via your proxy. If you really want to access</span><br><span class="line">    # private addresses in your proxy host network<span class="punctuation">,</span> modify the below line.</span><br><span class="line">    dip(geoip<span class="punctuation">:</span>private) -&gt; direct</span><br><span class="line"></span><br><span class="line">    ### Write your rules below.</span><br><span class="line"></span><br><span class="line">    # Disable h3 because it usually consumes too much cpu/mem resources.</span><br><span class="line">    l4proto(udp) &amp;&amp; dport(<span class="number">443</span>) -&gt; block</span><br><span class="line">    dip(geoip<span class="punctuation">:</span>cn) -&gt; direct</span><br><span class="line">    domain(geosite<span class="punctuation">:</span>cn) -&gt; direct</span><br><span class="line"></span><br><span class="line">    fallback<span class="punctuation">:</span> my_group</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><ul>
<li>将dae以守护服务的方式运行,即使用systemd</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载范例的systemd.service</span></span><br><span class="line">$ sudo curl -L -o /etc/systemd/system/dae.service https://github.com/daeuniverse/dae/raw/main/install/dae.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载守护进程,使得dae.service被识别</span></span><br><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动,--now使其现在就开启服务</span></span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> dae --now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看dae的状态</span></span><br><span class="line">$ sudo systemctl status dae</span><br></pre></td></tr></table></figure>
<ul>
<li>查看日志</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo journalctl -xefu dae</span><br></pre></td></tr></table></figure>
<ul>
<li>常用指令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 暂停运行</span></span><br><span class="line">$ dae <span class="built_in">suspend</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">$ dae reload</span><br></pre></td></tr></table></figure>
<h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul>
<li>dae manual<br><a href="https://github.com/daeuniverse/dae/blob/main/docs/en/user-guide/build-by-yourself.md">build-by-yourself</a><br><a href="https://github.com/daeuniverse/dae/blob/main/docs/en/user-guide/run-as-daemon.md">Run dae as a Daemon Service</a></li>
</ul>
]]></content>
      <tags>
        <tag>computer-networks</tag>
      </tags>
  </entry>
  <entry>
    <title>github ssh connection error</title>
    <url>/github-ssh-connection-error-e4a64b56eca4/</url>
    <content><![CDATA[<h2 id="起因："><a href="#起因：" class="headerlink" title="起因："></a>起因：</h2><p>在使用hexo的<code>hexo deploy</code>时报错，显示<code>Connection closed by 20.205.243.166 port 22</code>,<br>最初以为是hexo配置的问题,后来单独测试了github ssh连接 </p>
<h2 id="尝试使用ssh-clone自己的仓库"><a href="#尝试使用ssh-clone自己的仓库" class="headerlink" title="尝试使用ssh clone自己的仓库"></a>尝试使用ssh clone自己的仓库</h2><p>报错情况：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ spencer@spencerarch  ~   git <span class="built_in">clone</span> git@github.com:ispencerlee/ispencerlee.github.io.git</span><br><span class="line"></span><br><span class="line">Cloning into <span class="string">&#x27;ispencerlee.github.io&#x27;</span>...</span><br><span class="line">Connection closed by 20.205.243.166 port 22</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure></p>
<h2 id="ssh连接github报错"><a href="#ssh连接github报错" class="headerlink" title="ssh连接github报错"></a>ssh连接github报错</h2><p>测试ssh链接是否正常</p>
<p>正常情况：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ spencer@spencerarch  ~  ssh -T git@github.com</span><br><span class="line">Hi ispencerlee! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><br>会显示你的github用户名，说明连接正常</p>
<p>报错情况：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ spencer@spencerarch  ~  ssh -T git@github.com</span><br><span class="line">Connection closed by 20.205.243.166 port 22</span><br></pre></td></tr></table></figure></p>
<h2 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h2><p>编辑ssh的config文件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim .ssh/config</span><br></pre></td></tr></table></figure><br>添加如下内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  HostName ssh.github.com</span><br><span class="line">  Port 443</span><br></pre></td></tr></table></figure></p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>防火墙有时会拒绝通过ssh的22端口连接, 可以使用https的443端口来连接，这是https的默认开放端口  </p>
<p>参考资料：<br><a href="https://github.com/orgs/community/discussions/54558">https://github.com/orgs/community/discussions/54558</a><br><a href="https://docs.github.com/en/authentication/troubleshooting-ssh/using-ssh-over-the-https-port">https://docs.github.com/en/authentication/troubleshooting-ssh/using-ssh-over-the-https-port</a></p>
]]></content>
      <categories>
        <category>networks</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-migration</title>
    <url>/hexo-migration-037416e97f84/</url>
    <content><![CDATA[<h2 id="Causation"><a href="#Causation" class="headerlink" title="Causation"></a>Causation</h2><p>Due to I change my Linux distrobution from archlinux to ubuntu,<br>so I need to make an migration for hexo blog</p>
<h2 id="Migration"><a href="#Migration" class="headerlink" title="Migration"></a>Migration</h2><p>Copy the blog’s source file, config files</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cp</span> ~/blog/source ~/blog-backup</span><br><span class="line">$ <span class="built_in">cp</span> ~/blog/_config.* ~/blog-backup</span><br></pre></td></tr></table></figure>
<p>Create a new blog directory</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> blog</span><br></pre></td></tr></table></figure>
<h2 id="Setup-hexo"><a href="#Setup-hexo" class="headerlink" title="Setup hexo"></a>Setup hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># install hexo-cli</span></span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#check installation</span></span><br><span class="line"><span class="comment"># hexo -v</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># init hexo</span></span><br><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h2 id="Setup-butterfly"><a href="#Setup-butterfly" class="headerlink" title="Setup butterfly"></a>Setup butterfly</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install theme</span></span><br><span class="line">$ npm install hexo-theme-butterfly</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone theme to the blog/theme</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br><span class="line"><span class="comment"># install plugins</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># math formula</span></span><br><span class="line">$ npm uninstall hexo-renderer-marked --save</span><br><span class="line">$ npm install hexo-renderer-kramed --save</span><br><span class="line"></span><br><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># wordcount</span></span><br><span class="line">$ npm install hexo-wordcount --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># github deploy plugin</span></span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h2 id="Check"><a href="#Check" class="headerlink" title="Check"></a>Check</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://butterfly.js.org">butterfly-theme-document</a></p>
]]></content>
  </entry>
  <entry>
    <title>markdown lint vale configuration</title>
    <url>/markdown-lint-with-vale-10a85a7df670/</url>
    <content><![CDATA[<h1 id="markdown-lint-vale-configuration"><a href="#markdown-lint-vale-configuration" class="headerlink" title="markdown lint vale configuration"></a>markdown lint vale configuration</h1><ol>
<li>using mason install vale</li>
<li>sync the vale package for the first usage</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> ~/.config/vale/.vale.ini</span><br><span class="line">$ vim .vale.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># add those</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sync Styles to the global config</span></span><br><span class="line">StylesPath = .</span><br><span class="line">MinAlertLevel = suggestion</span><br><span class="line">Packages = RedHat, alex</span><br><span class="line">[*]</span><br><span class="line">BasedOnStyles = Vale, RedHat, alex</span><br></pre></td></tr></table></figure>
<ol>
<li>sync the mason package with global config</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~/.local/share/nvim/mason/packages/vale/vale --config=<span class="variable">$HOME</span>/.config/vale/.vale.ini <span class="built_in">sync</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://vale.sh/generator">vale</a><br><a href="https://github.com/mfussenegger/nvim-lint/issues/528">nvim-lint issue</a></p>
]]></content>
      <tags>
        <tag>neovim</tag>
      </tags>
  </entry>
  <entry>
    <title>ros2 humble installation on archlinux</title>
    <url>/ros2-humble-installation-41e5debd3fc1/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>ros2安装包只支持ubuntu, archlinux则需要自己编译</p>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>使用aur包编译安装:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yay -S ros2-humble</span><br></pre></td></tr></table></figure><br>但是遇到编译依赖报错<code>command sip-build not found</code><br>折腾了半天没弄好</p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>使用<a href="https://arch4edu.org/">arch4edu</a>的源，里面有已经编译好的包</p>
<ol>
<li><a href="https://github.com/arch4edu/arch4edu/wiki/Add-arch4edu-to-your-Archlinux">添加源</a></li>
<li>安装<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S ros2-humble</span><br></pre></td></tr></table></figure>
<h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2>使用节点图的时候报错<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ImportError: No module named pydot</span><br></pre></td></tr></table></figure>
解决方法：<br>安装python-pydot模块<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S python-pydot</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>参考资料：<br><a href="https://www.reddit.com/r/ROS/comments/1436gbb/ros2_on_arch/">https://www.reddit.com/r/ROS/comments/1436gbb/ros2_on_arch/</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>notes taking with vimtex</title>
    <url>/notes-taking-with-vimtex-a58614f30037/</url>
    <content><![CDATA[<h2 id="Install-texlive"><a href="#Install-texlive" class="headerlink" title="Install texlive"></a>Install texlive</h2><p>Download it at <a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images">tsinghua</a>, choose the <strong>texlive.iso*</strong></p>
<p>Install perl-tk, for texlive installation</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install perl-tk</span><br></pre></td></tr></table></figure>
<p>Load the texlive ISO file (do not care the warning)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo mount -o loop yourtexlive.iso /mnt</span><br><span class="line">$ <span class="built_in">cd</span> /mnt</span><br><span class="line"><span class="comment"># launch the GUI, just click install it</span></span><br><span class="line">$ sudo ./install-tl -gui</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Adding another packages</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># adding chinese support</span></span><br><span class="line">$ sudo apt install texlive-lang-chinese</span><br><span class="line"></span><br><span class="line"><span class="comment"># adding some package and fonts support</span></span><br><span class="line">$ sudo apt install texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-fonts-recommended</span><br></pre></td></tr></table></figure>
<p>Installing XeLatex</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install texlive-xetex</span><br></pre></td></tr></table></figure>
<p>Using chinse in Latex</p>
<ul>
<li>CTeX</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[UTF8]&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>[T1]&#123;fontenc&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">你好，这是一个测试文档。</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p>when using ctexart documention, recommand add it<code>\usepackage[T1]&#123;fontenc&#125;</code>, in case symbol can’t be displayed correct</p>
<ul>
<li>ctex</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>[UTF8]&#123;ctex&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">你好，这是一个测试文档。</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/lervag/vimtex">vimtex</a><br><a href="https://jdhao.github.io/2018/03/29/latex-chinese.zh/">全面总结如何在 LaTeX 中使用中文 (2020 最新版)</a></p>
]]></content>
  </entry>
</search>
